import logging

from aiogram import Bot, Dispatcher, executor, types
from aiogram.types import Message, CallbackQuery

from keyboards import *
from config import TOKEN

API_TOKEN = TOKEN
logging.basicConfig(level=logging.INFO)


bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)


@dp.message_handler(commands=['start'])
async def welcome(message: types.Message):
    await message.reply("–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∑–≤–æ–ª–∏—Ç —Ç–µ–±–µ —É–∑–Ω–∞—Ç—å —á—É—Ç—å –±–æ–ª—å—à–µ –æ–±–æ –º–Ω–µ",reply_markup=answer)


@dp.callback_query_handler(text='answer')
async def about(call: CallbackQuery):
    await call.message.answer(""""üôã‚Äç‚ôÇÔ∏è –ú–µ–Ω—è –∑–æ–≤—É—Ç –ê–±–¥—É—Ä–∞—Ö–º–æ–Ω, —è Junior-Python –ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç , –ø–æ—Å–ª–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è —É—á–µ–±–Ω–æ–≥–æ –∫—É—Ä—Å–∞ ,  —è —Ä–∞–±–æ—Ç–∞–ª –Ω–∞–¥ –¥–≤—É–º—è –ø—Ä–æ–µ–∫—Ç–∞–º–∏ –≤ –æ–±—â–µ–º —Å—á—ë—Ç–µ  4 –º–µ—Å—è—Ü–µ–≤. 

üë®‚Äçüíª –£–∂–µ –≥–æ–¥ –∫–∞–∫ —è –∏–∑—É—á–∞—é –∏ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—Å—å —ç—Ç–∏–º —è–∑—ã–∫–æ–º –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è. –ó–¥–µ—Å—å –º–æ–∂–µ—Ç–µ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –º–æ–∏–º–∏ –ø—Ä–æ–µ–∫—Ç–∞–º–∏:

https://github.com/Abdurakhmon701""", reply_markup=cases)

@dp.callback_query_handler(text='cases')
async def about(call: CallbackQuery):
    await call.message.answer("""–Ø —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–ª üë®‚Äçüíª Telegram –±–æ—Ç –¥–ª—è –æ–¥–Ω–æ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞, –∑–∞–Ω–∏–º–∞—é—à–∞—è—Å—è –ø—Ä–æ–¥–∞–∂–µ–π ü™¥ —Ü–≤–µ—Ç–æ–≤ –∏ —Ä–∞—Å—Ç–µ–Ω–∏–π.
–ü–æ–∫–∞-—á—Ç–æ —Å—á–∏—Ç–∞—é —ç—Ç–æ—Ç –ø—Ä–æ–µ–∫—Ç —Å–∞–º—ã–º –±–æ–ª—å—à–∏–º –≤ –º–æ–µ–π –∫–∞—Ä—å–µ—Ä–µ, —Ç–∞–∫ –∫–∞–∫ –≤ —ç—Ç–æ–º –±–æ—Ç–µ —è —Å–¥–µ–ª–∞–ª –∑–∞–∫–∞–∑–Ω—É—é –∫–æ—Ä–∑–∏–Ω—É, –∞ –µ—â—ë –ø—Ä–∏–≤—è–∑–∞–ª –ø–ª–∞—Ç—ë–∂–Ω—É—é —Å–∏—Å—Ç–µ–º—É.
–≠—Ç–æ—Ç –±–æ—Ç –±—ã–ª —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω —Å –ø–æ–º–æ—â—å—é Django, –∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ –∏–º–µ–µ—Ç —Å–≤–æ–π Back-End. –í –∫–æ–Ω—Ü–µ –ø–æ—Å—Ç–∞ –æ—Å—Ç–∞–≤–ª—é –æ—Ç–¥–µ–ª—å–Ω—ã–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ —Å–∞–º–æ–≥–æ –±–æ—Ç–∞ –∏ –µ–≥–æ –±—ç–∫—ç–Ω–¥–∞.

–í–æ—Ç –æ—Ç—Ä—ã–≤–æ–∫ –∫–æ–¥–∞ –ø–ª–∞—Ç–µ–∂–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã:

------------------------------------------------------------------------------------
@dp.callback_query_handler(Text(startswith='payment_'),state=OrderInfoData.payment)
async def echo(call: types.CallbackQuery,state: FSMContext):
	all_data = call.data.index('_')
	pay = call.data[all_data+1:]
	await call.message.answer("<b> –ú–∏–Ω—É—Ç–æ—á–∫—É.. </b>")
	information = get_basket_all_by_telegram_id(call.from_user.id)
	products_list = ''
	all_sum = 0
	if pay=="click":
		await state.update_data({"tulov":"click"})
		for info in  information:
			products_list+= f"\n{info['product_name']}\n"
			product_price = info['product_price']
			new_product_price = product_price.replace(' ',"")
			# print(f"{info['product_name']}*{info['count']}={int(new_product_price)*int(info['count'])},{info['product_price']}")
			all_sum += int(new_product_price)*int(info['count']) 

		product = Product(
			title="TestName",
			description="TestDescription",
			currency="UZS",
			prices=[
				LabeledPrice(
					label = f"{info['product_name']}",
					amount=all_sum*100,
					),
				LabeledPrice(
					label="–î–æ—Å—Ç–∞–≤–∫–∞",
					amount=5000000,
					),
				],
			start_parameter="create_invoice_python_book",
			provider_token = PROVIDER_TOKEN_CLICK
			)
		await bot.send_invoice(chat_id=call.from_user.id,**product.generate_invoice(),payload=f"{products_list}")
		await OrderInfoData.user_id.set()
--------------------------------------------------------------------------
–ü–æ–ª–Ω—ã–π –∫–æ–¥ —Å–∞–º–æ–≥–æ –±–æ—Ç–∞: https://github.com/Abdurakhmon701/Flowers_Garden_Bot
Django: https://github.com/Abdurakhmon701/Flowers_Garden_Backend""", reply_markup=next)

@dp.callback_query_handler(text='next')
async def about(call: CallbackQuery):
    await call.message.answer("""–ï—â—ë –æ–¥–∏–Ω –ø—Ä–æ–µ–∫—Ç, –∫–æ—Ç–æ—Ä–æ–≥–æ —è —Å–¥–µ–ª–∞–ª - —ç—Ç–æ InnoSchool. –ó–¥–µ—Å—å —è —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–ª Backend –∏ API, –Ω–µ–±–æ–ª—å—à–æ–π –∫–µ–π—Å.
–Ø —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–ª –æ—Ç–¥–µ–ª –Ω–æ–≤–æ—Å—Ç–µ–π —Å–∞–π—Ç–∞, –±—ã–ª–æ –∑–∞–±–∞–≤–Ω–æ. –û–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å Views —Ñ–∞–π–ª–æ–º:

----------------------------------------------------------------------------
class NewsViewUzRetrieveAPI(APIView):
	def get(self, request, pk):
		news = get_object_or_404(NewsModel, id=pk, status=True)
		serializer = NewsUzSerializers(news)
		return Response(serializer.data)


class NewsViewRuRetrieveAPI(APIView):
	def get(self, request, pk):
		news = get_object_or_404(NewsModel, id=pk, status=True)
		serializer = NewsRuSerializers(news)
		return Response(serializer.data)


class NewsViewEnRetrieveAPI(APIView):
	def get(self, request, pk):
		news = get_object_or_404(NewsModel, id=pk, status=True)
		serializer = NewsEnSerializers(news)
		return Response(serializer.data)


class ListNewsUzAPI(ListAPIView):
	serializer_class = NewsUzSerializers
	queryset = NewsModel.objects.filter(status=True).order_by("-id")
	pagination_class = LimitOffsetPagination


class ListNewsRuAPI(ListAPIView):
	serializer_class = NewsRuSerializers
	queryset = NewsModel.objects.filter(status=True).order_by("-id")
	pagination_class = LimitOffsetPagination


class ListNewsEnAPI(ListAPIView):
	serializer_class = NewsEnSerializers
	queryset = NewsModel.objects.filter(status=True).order_by("-id")
	pagination_class = LimitOffsetPagination
----------------------------------------------------------------------------
–ö–µ–π—Å: https://github.com/Abdurakhmon701/Inno-School""", reply_markup=contacts)

@dp.callback_query_handler(text='contacts')
async def about(call: CallbackQuery):
    await call.message.answer("–ú–æ–π –∞–∫–∫–∞—É–Ω—Ç: https://t.me/djuraev721")

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)